<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Yuki_Theme.Core.WPF.Controls">

    <Style x:Key="ButtonSource" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Foreground, TargetNullValue=Black, FallbackValue=Black}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag.BackgroundClickBrush, TargetNullValue=Red, FallbackValue=Red}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonSource}">
        <Setter Property="Margin" Value="2 10 2 5" />
    </Style>

    <Style x:Key="ButtonUserControl" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonSource}">
        <Setter Property="Margin" Value="2 10 2 5" />
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=Foreground, TargetNullValue=Black, FallbackValue=Black}" />
    </Style>

    <Style x:Key="Button24" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonSource}">
        <Setter Property="Margin" Value="2 10 2 5" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="MarginButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonSource}">
        <Setter Property="Margin" Value="15 10 5 5" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="BigButton" TargetType="{x:Type controls:AlignButton}" BasedOn="{StaticResource ButtonSource}">
        <Setter Property="Margin" Value="2 10 2 5" />
        <Setter Property="Width" Value="33" />
        <Setter Property="Height" Value="24" />
        <Setter Property="BorderBrush"
                Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag.BorderBrush, TargetNullValue=Red, FallbackValue=Red}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag.BackgroundClickBrush, TargetNullValue=Red, FallbackValue=Red}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShadowButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Tag.BorderBrush, TargetNullValue=White, FallbackValue=White}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.8" CornerRadius="3" x:Name="BorderB"
                            Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect
                                Color="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Tag.BorderColor, TargetNullValue=White, FallbackValue=White}"
                                ShadowDepth="0" />
                        </Border.Effect>
                        <TextBlock Foreground="{TemplateBinding BorderBrush}" Text="{TemplateBinding Content}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag.KeywordBrush, TargetNullValue=Red, FallbackValue=Red}" />
                            <Setter Property="Effect" TargetName="BorderB">
                                <Setter.Value>
                                    <DropShadowEffect
                                        Color="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag.KeywordColor, TargetNullValue=Red, FallbackValue=Red}"
                                        ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>