<Window x:Class="Yuki_Theme.Core.WPF.Windows.ManageThemesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Yuki_Theme.Core.WPF.Windows"
        xmlns:controls="clr-namespace:Yuki_Theme.Core.WPF.Controls"
        mc:Ignorable="d"
        ResizeMode="NoResize" WindowStartupLocation="CenterOwner"
        Loaded="Initialize"
        Title="Manage Themes" Width="400" Style="{DynamicResource SLayer}">
    <Window.Tag>
        <controls:StyleConfig BorderColor="#FF97A0A5" SelectionColor="#FF4F4F4F" KeywordColor="#FF4F4F4F" BorderBrush="#FF97A0A5"
                              SelectionBrush="#FF4F4F4F" KeywordBrush="#FF4F4F4F" />
    </Window.Tag>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="/Yuki_Theme.Core.WPF;component/Styles/WindowTemplate.xaml" />
                <ResourceDictionary
                    Source="/Yuki_Theme.Core.WPF;component/Styles/ButtonStyles.xaml" />

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5 0">
        <Grid.Resources>
            <Style x:Key="ThemeManager" TargetType="{x:Type controls:ManageableItem}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="4,1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:Manageable}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="controls:ManageableItem.IsGroup" Value="False" />
                                        <Condition Property="controls:ManageableItem.IsCollapsed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="controls:ManageableItem.IsGroup" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=Tag.SelectionBrush}" />
                                    <Setter Property="BorderBrush" TargetName="Bd"
                                            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=Tag.BorderBrush}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="controls:ManageableItem.IsGroup" Value="False" />
                                        <Condition Property="controls:ManageableItem.IsCollapsed" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=Tag.SelectionBrush}" />
                                    <Setter Property="BorderBrush" TargetName="Bd"
                                            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=Tag.BorderBrush}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd"
                                            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="302" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <controls:Manageable Padding="5" x:Name="Schemes" SelectionMode="Single" BorderThickness="0"
                             Background="#323232"
                             Foreground="{Binding ElementName=Window, Path=Foreground}"
                             Tag="{Binding ElementName=Window, Path=Tag}">
            <controls:Manageable.Items>
                <controls:ManageableItem Title="Testing 1" />
                <controls:ManageableItem Title="Testing 2" />
                <controls:ManageableItem Title="Testing 3" />
            </controls:Manageable.Items>
        </controls:Manageable>

    </Grid>
</Window>